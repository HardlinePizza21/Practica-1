Index: src/LivingBeingCreator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import LivingBeingsPackage.LivingBeings;\r\nimport BeingsOfTheEarth.*;\r\nimport SkyBeings.*;\r\npublic class LivingBeingCreator implements Creator{\r\n    public void crearSerVivo(int tipo, LivingBeings[] seresVivos){\r\n        LivingBeings serVivo;\r\n        switch (tipo) {\r\n            case 1:\r\n                System.out.println(\"Se creo un humano\");\r\n                serVivo = new Human(\"Humano\");\r\n                break;\r\n            case 2:\r\n                System.out.println(\"Creando pajaro\");\r\n                serVivo = new SkyBeings();\r\n                break;\r\n            default:\r\n                System.out.println(\"Opción no válida, entidad  misteriosa creado\");\r\n                serVivo = new UnknowEntity();\r\n                break;\r\n        }\r\n        for(int i = 0; i < seresVivos.length; i++){\r\n            if(seresVivos[i] == null){\r\n                seresVivos[i] = serVivo;\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/LivingBeingCreator.java b/src/LivingBeingCreator.java
--- a/src/LivingBeingCreator.java	
+++ b/src/LivingBeingCreator.java	
@@ -2,26 +2,26 @@
 import BeingsOfTheEarth.*;
 import SkyBeings.*;
 public class LivingBeingCreator implements Creator{
-    public void crearSerVivo(int tipo, LivingBeings[] seresVivos){
-        LivingBeings serVivo;
+    public LivingBeings crearSerVivo(int tipo){
         switch (tipo) {
             case 1:
                 System.out.println("Se creo un humano");
-                serVivo = new Human("Humano");
-                break;
+                return new Human("Humano");
             case 2:
                 System.out.println("Creando pajaro");
-                serVivo = new SkyBeings();
-                break;
+                return new SkyBeings();
+            case 3:
+                System.out.println("Creando terrestre");
+                return new Turtle();
+
             default:
                 System.out.println("Opción no válida, entidad  misteriosa creado");
-                serVivo = new UnknowEntity();
-                break;
+                return new UnknowEntity();
         }
-        for(int i = 0; i < seresVivos.length; i++){
+        /*for(int i = 0; i < seresVivos.length; i++){
             if(seresVivos[i] == null){
                 seresVivos[i] = serVivo;
             }
-        }
+        }*/
     }
 }
\ No newline at end of file
Index: src/Creator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import LivingBeingsPackage.LivingBeings;\r\n\r\ninterface Creator {\r\n    public void crearSerVivo(int tipo, LivingBeings[] seresVivos);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Creator.java b/src/Creator.java
--- a/src/Creator.java	
+++ b/src/Creator.java	
@@ -1,5 +1,5 @@
 import LivingBeingsPackage.LivingBeings;
 
 interface Creator {
-    public void crearSerVivo(int tipo, LivingBeings[] seresVivos);
+    public LivingBeings crearSerVivo(int tipo);
 }
\ No newline at end of file
Index: src/SkyBeings/SkyBeing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package SkyBeings;\r\npublic interface SkyBeing{\r\n    default void fly(){\r\n        System.out.println(\"Vuelo con mis alas\");\r\n    }\r\n\r\n    default void changeDimension(){\r\n        System.out.println(\"Cambio de dimension\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/SkyBeings/SkyBeing.java b/src/SkyBeings/SkyBeing.java
--- a/src/SkyBeings/SkyBeing.java	
+++ b/src/SkyBeings/SkyBeing.java	
@@ -1,10 +1,5 @@
 package SkyBeings;
-public interface SkyBeing{
-    default void fly(){
-        System.out.println("Vuelo con mis alas");
-    }
-
-    default void changeDimension(){
-        System.out.println("Cambio de dimension");
-    }
+public interface SkyBeing {
+    public void fly();
+    public void changeDimension();
 }
\ No newline at end of file
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import LivingBeingsPackage.LivingBeings;\r\n\r\npublic class Main {\r\n\r\n\r\n    public static void main(String[] args) {\r\n\r\n        LivingBeingCreator Dios = new LivingBeingCreator();\r\n\r\n        LivingBeings[] mundo = new LivingBeings[1];\r\n        //1. Humano , 2. Pajaro\r\n        Dios.crearSerVivo(1, mundo);\r\n\r\n        mundo[0].fly();\r\n\r\n        for(int i = 0; i < mundo.length; i++){\r\n            System.out.println(i + \".\" + mundo[i].getNombre() + \"\\n\");\r\n        }\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	
+++ b/src/Main.java	
@@ -7,16 +7,17 @@
 
         LivingBeingCreator Dios = new LivingBeingCreator();
 
-        LivingBeings[] mundo = new LivingBeings[1];
+        //LivingBeings[] mundo = new LivingBeings[1];
         //1. Humano , 2. Pajaro
-        Dios.crearSerVivo(1, mundo);
 
-        mundo[0].fly();
+        LivingBeings ser = Dios.crearSerVivo(3);
+        ser.caminar();
 
-        for(int i = 0; i < mundo.length; i++){
+        //mundo[0].fly();
+
+        /*for(int i = 0; i < mundo.length; i++){
             System.out.println(i + "." + mundo[i].getNombre() + "\n");
-        }
+        }*/
 
-
     }
-}
\ No newline at end of file
+}
Index: src/BeingsOfTheEarth/Human.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BeingsOfTheEarth;\r\nimport SkyBeings.SkyBeing;\r\nimport LivingBeingsPackage.LivingBeings;\r\npublic class Human extends LivingBeings implements EarthBeing, SkyBeing{\r\n\r\n\r\n    public Human(String nombre){\r\n        super(nombre);\r\n    }\r\n\r\n    public Human(){\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fly() {\r\n        System.out.println(\"El humano \" + this.nombre + \" puede volar en avion\");\r\n    }\r\n\r\n    @Override\r\n    public void changeDimension() {\r\n        System.out.println(\"Cambio de dimension con maquinas\");\r\n    }\r\n\r\n    @Override\r\n    public void born() {\r\n        System.out.println(\"Nacio un humano\");\r\n    }\r\n\r\n    @Override\r\n    public void grown() {\r\n        this.edad++;\r\n        System.out.println(\"El humano crecio un año\");\r\n    }\r\n\r\n    @Override\r\n    public void respaw() {\r\n        System.out.println(\"Volvio a la vida como un zombie\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BeingsOfTheEarth/Human.java b/src/BeingsOfTheEarth/Human.java
--- a/src/BeingsOfTheEarth/Human.java	
+++ b/src/BeingsOfTheEarth/Human.java	
@@ -1,14 +1,15 @@
 package BeingsOfTheEarth;
+
 import SkyBeings.SkyBeing;
 import LivingBeingsPackage.LivingBeings;
-public class Human extends LivingBeings implements EarthBeing, SkyBeing{
+
+public class Human extends LivingBeings implements EarthBeing, SkyBeing {
 
-
-    public Human(String nombre){
+    public Human(String nombre) {
         super(nombre);
     }
 
-    public Human(){
+    public Human() {
 
     }
 
@@ -22,6 +23,11 @@
         System.out.println("Cambio de dimension con maquinas");
     }
 
+    @Override
+    public void caminar() {
+        System.out.println("Camino con mis piernas");
+    }
+
     @Override
     public void born() {
         System.out.println("Nacio un humano");
@@ -34,7 +40,12 @@
     }
 
     @Override
-    public void respaw() {
+    public void respawn() {
         System.out.println("Volvio a la vida como un zombie");
     }
+
+    @Override
+    public void die() {
+
+    }
 }
Index: src/BeingsOfTheEarth/EarthBeing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BeingsOfTheEarth;\r\npublic interface EarthBeing {\r\n    default void caminar(){\r\n        System.out.println(\"Estoy caminando\");\r\n    };\r\n\r\n    public void born();\r\n\r\n    public void grown();\r\n\r\n    public void respaw();\r\n\r\n    public void die();\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BeingsOfTheEarth/EarthBeing.java b/src/BeingsOfTheEarth/EarthBeing.java
--- a/src/BeingsOfTheEarth/EarthBeing.java	
+++ b/src/BeingsOfTheEarth/EarthBeing.java	
@@ -1,16 +1,6 @@
 package BeingsOfTheEarth;
 public interface EarthBeing {
-    default void caminar(){
-        System.out.println("Estoy caminando");
-    };
-
-    public void born();
+    public void caminar();
 
-    public void grown();
-
-    public void respaw();
-
-    public void die();
-
-
+    public void respawn();
 }
\ No newline at end of file
Index: src/LivingBeingsPackage/LivingBeings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package LivingBeingsPackage;\r\n\r\npublic abstract class LivingBeings{\r\n    protected int edad;\r\n    protected String nombre;\r\n\r\n    public LivingBeings(String nombre){\r\n        this.nombre = nombre;\r\n        this.born();\r\n    }\r\n    public LivingBeings(){\r\n\r\n    }\r\n\r\n    public String getNombre(){\r\n        return this.nombre;\r\n    }\r\n\r\n    abstract public void fly();\r\n\r\n    protected void born(){\r\n        this.edad = 0;\r\n        System.out.println(\"Nacio \"+ this.nombre);\r\n    }\r\n\r\n    protected void grown(){\r\n        this.edad++;\r\n\r\n    }\r\n\r\n    protected void reproduce(){\r\n        System.out.println(this.nombre + \" se esta reproduciendo\");\r\n    }\r\n\r\n    public void die(){\r\n        System.out.println(this.nombre + \" murio\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/LivingBeingsPackage/LivingBeings.java b/src/LivingBeingsPackage/LivingBeings.java
--- a/src/LivingBeingsPackage/LivingBeings.java	
+++ b/src/LivingBeingsPackage/LivingBeings.java	
@@ -1,38 +1,37 @@
 package LivingBeingsPackage;
 
-public abstract class LivingBeings{
+import BeingsOfTheEarth.EarthBeing;
+import SkyBeings.SkyBeing;
+
+public abstract class LivingBeings implements SkyBeing, EarthBeing {
     protected int edad;
     protected String nombre;
 
-    public LivingBeings(String nombre){
+    public LivingBeings(String nombre) {
         this.nombre = nombre;
         this.born();
     }
-    public LivingBeings(){
+
+    public LivingBeings() {
 
     }
 
-    public String getNombre(){
+    public String getNombre() {
         return this.nombre;
     }
 
-    abstract public void fly();
-
-    protected void born(){
+    protected void born() {
         this.edad = 0;
-        System.out.println("Nacio "+ this.nombre);
+        System.out.println("Nacio " + this.nombre);
     }
 
-    protected void grown(){
+    public void grown() {
         this.edad++;
-
     }
 
-    protected void reproduce(){
+    public void reproduce() {
         System.out.println(this.nombre + " se esta reproduciendo");
     }
 
-    public void die(){
-        System.out.println(this.nombre + " murio");
-    }
+     protected abstract void die();
 }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/BeingsOfTheEarth/Turtle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BeingsOfTheEarth/Turtle.java b/src/BeingsOfTheEarth/Turtle.java
new file mode 100644
--- /dev/null	
+++ b/src/BeingsOfTheEarth/Turtle.java	
@@ -0,0 +1,40 @@
+package BeingsOfTheEarth;
+
+import LivingBeingsPackage.LivingBeings;
+
+public class Turtle extends LivingBeings implements EarthBeing{
+    @Override
+    public void caminar() {
+        System.out.println("Camino lentamente con mis patas");
+    }
+
+    @Override
+    public void respawn() {
+
+    }
+
+    @Override
+    public void born() {
+
+    }
+
+    @Override
+    public void grown() {
+
+    }
+
+    @Override
+    public void die() {
+
+    }
+
+    @Override
+    public void fly() {
+
+    }
+
+    @Override
+    public void changeDimension() {
+
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"46ecd931-353e-4453-b8a2-10b93168fe38\" name=\"Changes\" comment=\"Segundo Commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/BeingsOfTheEarth/EarthBeing.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/BeingsOfTheEarth/EarthBeing.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/BeingsOfTheEarth/Human.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/BeingsOfTheEarth/Human.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/LivingBeingsPackage/LivingBeings.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/LivingBeingsPackage/LivingBeings.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/SkyBeings/SkyBeings.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/SkyBeings/SkyBeings.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/UnknowEntity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/UnknowEntity.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2dmlfdaRWClHOMCtpFRWveYS7Vs\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/madri/Desktop/Practica-1/src/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.javacompiler&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Practica-1\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"46ecd931-353e-4453-b8a2-10b93168fe38\" name=\"Changes\" comment=\"\" />\r\n      <created>1710621241543</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710621241543</updated>\r\n      <workItem from=\"1710621242653\" duration=\"691000\" />\r\n      <workItem from=\"1710708466093\" duration=\"2549000\" />\r\n      <workItem from=\"1710715108961\" duration=\"8132000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Segundo Commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710722410078</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710722410078</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Segundo Commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Segundo Commit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,12 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="46ecd931-353e-4453-b8a2-10b93168fe38" name="Changes" comment="Segundo Commit">
+    <list default="true" id="46ecd931-353e-4453-b8a2-10b93168fe38" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/BeingsOfTheEarth/Turtle.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/BeingsOfTheEarth/EarthBeing.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/BeingsOfTheEarth/EarthBeing.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/BeingsOfTheEarth/Human.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/BeingsOfTheEarth/Human.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Creator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Creator.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/LivingBeingCreator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/LivingBeingCreator.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/LivingBeingsPackage/LivingBeings.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/LivingBeingsPackage/LivingBeings.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/SkyBeings/SkyBeing.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SkyBeings/SkyBeing.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/SkyBeings/SkyBeings.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SkyBeings/SkyBeings.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/UnknowEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/UnknowEntity.java" afterDir="false" />
     </list>
@@ -27,7 +32,6 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -37,9 +41,7 @@
   &quot;associatedIndex&quot;: 8
 }</component>
   <component name="ProjectId" id="2dmlfdaRWClHOMCtpFRWveYS7Vs" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -49,7 +51,6 @@
     &quot;Application.Main.executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
     &quot;git-widget-placeholder&quot;: &quot;master&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
@@ -83,7 +84,7 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
+        <option value="jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4" />
       </set>
     </attachedChunks>
   </component>
@@ -96,36 +97,12 @@
       <option name="presentableId" value="Default" />
       <updated>1710621241543</updated>
       <workItem from="1710621242653" duration="691000" />
-      <workItem from="1710708466093" duration="2549000" />
-      <workItem from="1710715108961" duration="8132000" />
+      <workItem from="1710882204847" duration="7810000" />
+      <workItem from="1711059831843" duration="602000" />
     </task>
-    <task id="LOCAL-00001" summary="Segundo Commit">
-      <option name="closed" value="true" />
-      <created>1710722410078</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1710722410078</updated>
-    </task>
-    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-  <component name="VcsManagerConfiguration">
-    <MESSAGE value="Segundo Commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="Segundo Commit" />
-  </component>
 </project>
\ No newline at end of file
